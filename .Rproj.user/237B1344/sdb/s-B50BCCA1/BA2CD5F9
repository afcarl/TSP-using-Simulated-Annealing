{
    "contents" : "genDist <- function(ncities) {\n  dist <- matrix(data = sample(1:((ncities^2)*10), ncities^2), nrow = ncities, ncol = ncities)\n  \n  for (i in 1:ncities) {\n    for (j in i:ncities) {\n      dist[i,j] = dist[j,i];\n    }\n    dist[i,i] = 0\n  }\n  \n  return (dist)\n}\n\ndistance <- function(order) {\n  total_distance <- 0\n  \n  for (i in 1:(length(order)-1)) {\n    total_distance <- total_distance + dist[order[i], order[i+1]]\n  }\n  \n  total_distance <- total_distance + dist[order[length(order)], order[1]]\n  return (total_distance)\n}\n\nswap <- function(order) {\n  indices <- sample(1:length(order), 2)\n  temp = order[indices[1]]\n  order[indices[1]] = order[indices[2]]\n  order[indices[2]] = temp\n  return(order)\n}\n\naccptFun <- function(delE, t) {\n  return(1/(1+exp(delE/t)))\n}\n\nt = 1e5\nncities <- 30\ndist <- genDist(ncities = ncities)\norder <- sample(x = 1:ncities)\nE <- distance(order = order)\niter <- 1\nError <- c(E)\n\nwhile(t > 1) {\n  newOrder <- swap(order = order)\n  newE <- distance(order = newOrder)\n  \n  rand <- runif(1, min = 0, max = 1)\n  acpt <- accptFun(newE - E, t)\n  \n  if(rand <= acpt) {\n    delE <- newE - E\n    \n    cat(\"Iteration: \", iter, \"Temp: \", t, \"\\n\")\n    #cat(\"Order: \", order, \", New Order: \", newOrder, \"\\n\")\n    cat(\"Total Distance: \", E, \"Del E: \", delE, \", New Total Distance: \", newE, \"\\n\")\n    cat(\"\\n\\n\")\n    \n    E <- newE\n    order <- newOrder\n    t <- t * 0.9\n    iter <- iter + 1\n    Error[iter] = E\n  }\n}\n\n\n",
    "created" : 1451718827733.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3014547163",
    "id" : "BA2CD5F9",
    "lastKnownWriteTime" : 1451725294,
    "path" : "~/SA/tsp.R",
    "project_path" : "tsp.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}